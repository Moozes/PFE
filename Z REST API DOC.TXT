Signup---
Login---
forget password---
logout---
logoutAll
get my profile information
delete my user---
upload profile image
delete profile image
verify email
Update profile
get all doctors

admin
    varify a doctor
    delete a user

admin & doctor
    get published lesions

admin & doctor & owner
    comment on a lesion

user
    upload a lesion
    get my uploaded lesions
    delete one of my lesions
    Publish/Unpublish one of my lesions

    send message to doctor X
    get all my messages from doctor X
    
=======================================================
============= Account Management =======================
=======================================================
    Signup
        POST host/users
        send: 
            {
                name: ""
                email: ""
                password: ""
                role: "user" or "doctor"
            }

        receive:
            if success
            status: 201
            {
                user: {
                    name
                    email
                    role
                    createdAt
                    updatedAt
                    avatarUrl // url string or null
                },
                token: "..."
            }

            if error
            status: 400
            {
                error: string or object
            }

    ==================================================
    Login
        POST host/users/login
        send: 
            {
                name: ""
                email: ""
            }

        receive:
            if success
            status:200 
            {
                user: {
                    name
                    email
                    role
                    createdAt
                    updatedAt
                    avatarUrl // url string or null
                },
                token: "..."
            }
        
            if error
            status: 400
            {
                error: "unable to login"
            }

    =========================================================
    forget password: it has to parts
        POST host/send-reset-code
        send: 
            {
                email: ""
            }

        receive:
            if success
            status: 200
            {}
        
            if error
            status: 404 or 400
            {
                error: "not found" or {}
            }
        =======================================
        POST host/reset-password
        send: 
            {
                email: ""
                code: ""
                newPassword: ""
            }

        receive:
            if success
            status: 200
            {}
        
            if error
            status: 404 or 400
            {
                error: "not found" or object
            }
    =======================================================
    logout
        POST host/users/logout
        send:
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200
            {}
        
            if error
            status: 401 
            {
                error: "please authenticate"
            }

    ====================================================
    logoutAll
        POST host/users/logoutAll
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200
            {}
        
            if error
            status: 401
            {
                error: "please authenticate"
            }

    ======================================================
    get my profile information
        GET host/users/me
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200
            {
                name
                email
                role
                createdAt
                updatedAt
                avatarUrl // url string or null
            }
        
            if error
            status: 401
            {
                error: "please authenticate"
            }

    =======================================================
    delete my user
        DELETE host/users/me
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200
            {
                name
                email
                role
                createdAt
                updatedAt
                avatarUrl // url string or null
            }

            if error
            status: 401
            {
                error: "please authenticate"
            }

    ======================================================
    upload profile image
        POST host/users/me/avatar
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            form data with name "avatar"

        receive:
            if success
            status: 200
            {}

            if error
            status: 400 //if not an image: jpg, jpeg, png
            {
                "error": "Please upload an image" or "file too large"
            }

    =======================================================
    delete profile image
        DELETE host/users/me/avatar
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200
            {}

            if error
            status: 500
            {
                error: "server error"
            }

    ========================================================
    verify email
        POST host/verify
        send: 
            {
                email
                code
            }

        receive:
            if success
            status: 200
            {}

            if error
            status: 404 or 400
            {
                error: "not found" or {}
            }

    =====================================================
    Update profile
        PATCH host/users/me
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {
                name: 
                email: 
                password: 
            }

        receive:
            if success
            status: 200
            {
                "_id": "62a88ee5d96a5b5a93f323fa",
                "name": "moussa3 updated",
                "email": "example3@example.com",
                "role": "doctor",
                "createdAt": "2022-06-14T13:36:37.151Z",
                "updatedAt": "2022-06-14T14:07:19.504Z",
                "__v": 2,
                "avatarUrl": null
            }

            if error
            status: 400 if you try to update other fields like password or role..., or mongoose validation error
            {
                error: 'Cant update those properties' or object
            }



======================================================================
    Get all doctors
        GET host/users/doctors
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200
            [
                {
                    "_id": "62a46f4223d6f20e0dc12c49",
                    "name": "moussa",
                    "email": "m.khodja@esi-sba.dz",
                    "role": "doctor",
                    "createdAt": "2022-06-11T10:32:34.590Z",
                    "updatedAt": "2022-06-13T17:41:17.946Z",
                    "__v": 4,
                    "avatarUrl": null
                },
                {
                    "_id": "62a88ee5d96a5b5a93f323fa",
                    "name": "moussa3",
                    "email": "example3@example.com",
                    "role": "doctor",
                    "createdAt": "2022-06-14T13:36:37.151Z",
                    "updatedAt": "2022-06-14T13:36:37.212Z",
                    "__v": 1,
                    "avatarUrl": null
                }
            ]

            if error
            status: 500
            {}




=======================================================
============= Admin =======================
=======================================================
    verify doctor or unverify
        POST host/users/:id/verifyDoctor
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200
            {}

            if error
            status: 404 or (401 not authenticated because not logged in) or (403 not authorized because not admin)
            {
                error: "Not Found"
            }
    =========================================================
    delete a user
        DELETE host/users/:id
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200
            {}

            if error
            status: 404 or (401 not authenticated because not logged in) or (403 not authorized because not admin)
            {
                error: "Not Found"
            }

==========================================================================
============= Doctors and Admin and owner of lesion =======================
==========================================================================
    comment on a lesion
        POST host/lesions/:id/comments
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {
                text  "...comment text..."
            }

        receive:
            if success
            status: 201 created
            {
                "_id": "62a88a77d0de9e5172c91894",
                "description": "admin lesion2",
                "published": false,
                "imageUrl": "/lesions/62a88a77d0de9e5172c91894/image"
                "createdAt": "2022-06-14T13:17:43.922Z",
                "updatedAt": "2022-06-14T13:17:43.922Z",
                "comments": [
                    {
                        "_id": "62af4990ba0a8915bb188657",
                        "user": {
                            "_id": "62ab30270362cf621ada2e30",
                            "email": "khodja.moussa@yahoo.com",
                            "name": "admin",
                            avatarUrl: url or null
                        },
                        "text": "from admin"
                    }
                ],
                "owner": {
                    _id
                    name
                    email
                    avatarUrl
                },
                "prediction": {
                    "probability": "99%",
                    "result": "melanoma"
                },
            }

            if error
            status:  400 (validation error) 404 or (lesion not found) 
            {
                error: msg or object
            }


========================================================
============= Doctors and admin=======================
=======================================================
    Get published lesions
        GET host/lesions/published
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200 
            [
                {
                    "_id": "62a88a77d0de9e5172c91894",
                    "description": "admin lesion2",
                    "published": false,
                    "imageUrl": "/lesions/62a88a77d0de9e5172c91894/image"
                    "createdAt": "2022-06-14T13:17:43.922Z",
                    "updatedAt": "2022-06-14T13:17:43.922Z",
                    comments: []
                    "owner": {
                        _id
                        name
                        email
                        avatarUrl
                    },
                    "prediction": {
                        "probability": "99%",
                        "result": "melanoma"
                    },
                }
            ]
            if error
            status: 500
            {
                error: something
            }






===================================================================================
============= Lesion Management: User =======================
===================================================================================
    upload a lesion
        POST host/lesions
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 

            send multipart/form-data (DONT SEND JSON!!!) with these 2 field names
            image: binary
            description: ... (not required)

        receive:
            if success
            status: 201
            {
                "_id": "62a88a77d0de9e5172c91894",
                "description": "admin lesion2",
                "published": false,
                "imageUrl": "/lesions/62a88a77d0de9e5172c91894/image"
                "createdAt": "2022-06-14T13:17:43.922Z",
                "updatedAt": "2022-06-14T13:17:43.922Z",
                comments: []
                "owner": {
                    _id
                    name
                    email
                    avatarUrl
                },
                "prediction": {
                    "probability": "99%",
                    "result": "melanoma"
                },
            }

            if error
            status: 400
            {
                error: "Please upload an image"
            }

    ========================================================
    Get my uploaded lesions
        GET host/lesions
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200 
            [
                {
                    "_id": "62a88a77d0de9e5172c91894",
                    "description": "admin lesion2",
                    "published": false,
                    "imageUrl": "/lesions/62a88a77d0de9e5172c91894/image"
                    "createdAt": "2022-06-14T13:17:43.922Z",
                    "updatedAt": "2022-06-14T13:17:43.922Z",
                    comments: []
                    "owner": {
                        _id
                        name
                        email
                        avatarUrl
                    },
                    "prediction": {
                        "probability": "99%",
                        "result": "melanoma"
                    },
                }
            ]

            if error 
            status: 500
            {}

    ========================================================
    Delete one of my lesions
        DELETE host/lesion/:id
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {}

        receive:
            if success
            status: 200
            {
                "_id": "62a88a77d0de9e5172c91894",
                "description": "admin lesion2",
                "published": false,
                "imageUrl": "/lesions/62a88a77d0de9e5172c91894/image"
                "createdAt": "2022-06-14T13:17:43.922Z",
                "updatedAt": "2022-06-14T13:17:43.922Z",
                comments: []
                "owner": {
                    _id
                    name
                    email
                    avatarUrl
                },
                "prediction": {
                    "probability": "99%",
                    "result": "melanoma"
                },
            }

            if error
            status: 404 or 500
            {
                error: "Not Found!"
            }

    =====================================================
    Publish/Unpublish one of my lesions
        PATCH host/lesions/:id
        send: 
            header: Authorization, value: "Bearer ...token_string_here..." 
            {
                published: true or false
            }

        receive:
            if success
            status: 200
            {
                "_id": "62a88a77d0de9e5172c91894",
                "description": "admin lesion2",
                "published": false,
                "imageUrl": "/lesions/62a88a77d0de9e5172c91894/image"
                "createdAt": "2022-06-14T13:17:43.922Z",
                "updatedAt": "2022-06-14T13:17:43.922Z",
                comments: []
                "owner": {
                    _id
                    name
                    email
                    avatarUrl
                },
                "prediction": {
                    "probability": "99%",
                    "result": "melanoma"
                },
            }


            if error
            status: 404 or 400 (if you try to update another field) 
            {
                error: "Not Found!"
            }




===================================================================================
============= Message Management: User =======================
===================================================================================
    send message to doctor X
    POST host/messages/:id_of_doctor_x
    send: 
        header: Authorization, value: "Bearer ...token_string_here..." 
        {
            text:
        }

    receive:
        if success
        status: 201 
        {
            text:
            sender: {
                _id
                email
                name
                avatarUrl
            },
            receiver: {
                _id
                email
                name
                avatarUrl
            },
        }

        if error
        status: 404 or 401 
        {
            error: "not found" or "please authenticate" 
        }

    ==========================================================      
    get all my messages with doctor X
    GET host/messages/:id_of_doctor_x
    send: 
        header: Authorization, value: "Bearer ...token_string_here..." 
        {}

    receive:
        if success
        status: 200
        [
            {
                text:
                sender: {
                    _id
                    email
                    name
                    avatarUrl
                },
                receiver: {
                    _id
                    email
                    name
                    avatarUrl
                },
            }
        ]

        if error
        status: 404 or 401
        {
            error: "not found" or "please authenticate" 
        }

Notes: 
    -when you send Authorization header make sure the value is like this: "Bearer ...token_string_here..."
                                                                                \/
                                                                            leave only one 
                                                                            
    - admin account is always created automatically when the app starts
        email: khodja.moussa@yahoo.com
        password: helloadmin

    - permissions
        admin has 3 permissions: admin, doctor, user
        doctor has 2 permissions: doctor, user
        user has 1 permission : user









    METHOD host/users
    send: 
        header: Authorization, value: "Bearer ...token_string_here..." 
        {}

    receive:
        if success
        status: 
        {}

        if error
        status: 
        {}
